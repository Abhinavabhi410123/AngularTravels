{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class RegistrationFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.registrationForm = this.fb.group({\n      fromDestination: ['', Validators.required],\n      toDestination: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1)]],\n      date: ['', Validators.required],\n      terms: [false, Validators.requiredTrue]\n    });\n  }\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      console.log('Form Submitted!', this.registrationForm.value);\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n  static #_ = this.ɵfac = function RegistrationFormComponent_Factory(t) {\n    return new (t || RegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationFormComponent,\n    selectors: [[\"app-registration-form\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"fromDestination\"], [\"id\", \"fromDestination\", \"type\", \"text\", \"formControlName\", \"fromDestination\", \"required\", \"\"], [\"for\", \"toDestination\"], [\"id\", \"toDestination\", \"type\", \"text\", \"formControlName\", \"toDestination\", \"required\", \"\"], [\"for\", \"price\"], [\"id\", \"price\", \"type\", \"number\", \"formControlName\", \"price\", \"required\", \"\"], [\"for\", \"date\"], [\"id\", \"date\", \"type\", \"date\", \"formControlName\", \"date\", \"required\", \"\"], [\"for\", \"terms\"], [\"id\", \"terms\", \"type\", \"checkbox\", \"formControlName\", \"terms\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function RegistrationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrationFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"From Destination:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"To Destination:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵtext(20, \" I accept the terms and conditions \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"button\", 11);\n        i0.ɵɵtext(22, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"disabled\", !ctx.registrationForm.valid);\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Validators","RegistrationFormComponent","constructor","fb","registrationForm","group","fromDestination","required","toDestination","price","min","date","terms","requiredTrue","onSubmit","valid","console","log","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","RegistrationFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegistrationFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\saik4\\Tourism\\src\\app\\components\\bookings\\bookings.component.ts","C:\\Users\\saik4\\Tourism\\src\\app\\components\\bookings\\bookings.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './bookings.component.html',\n})\nexport class RegistrationFormComponent {\n  registrationForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.registrationForm = this.fb.group({\n      fromDestination: ['', Validators.required],\n      toDestination: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1)]],\n      date: ['', Validators.required],\n      terms: [false, Validators.requiredTrue],\n    });\n  }\n\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      console.log('Form Submitted!', this.registrationForm.value);\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n}\n\n","<form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"fromDestination\">From Destination:</label>\n      <input id=\"fromDestination\" type=\"text\" formControlName=\"fromDestination\" required />\n    </div>\n  \n    <div>\n      <label for=\"toDestination\">To Destination:</label>\n      <input id=\"toDestination\" type=\"text\" formControlName=\"toDestination\" required />\n    </div>\n  \n    <div>\n      <label for=\"price\">Price:</label>\n      <input id=\"price\" type=\"number\" formControlName=\"price\" required />\n    </div>\n  \n    <div>\n      <label for=\"date\">Date:</label>\n      <input id=\"date\" type=\"date\" formControlName=\"date\" required />\n    </div>\n  \n    <div>\n      <label for=\"terms\">\n        <input id=\"terms\" type=\"checkbox\" formControlName=\"terms\" />\n        I accept the terms and conditions\n      </label>\n    </div>\n  \n    <button type=\"submit\" [disabled]=\"!registrationForm.valid\">Submit</button>\n  </form>\n  \n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAMnE,OAAM,MAAOC,yBAAyB;EAGpCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACpCC,eAAe,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAC1CC,aAAa,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MACxCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACrDC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACO,QAAQ,CAAC;MAC/BK,KAAK,EAAE,CAAC,KAAK,EAAEZ,UAAU,CAACa,YAAY;KACvC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACV,gBAAgB,CAACW,KAAK,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACb,gBAAgB,CAACc,KAAK,CAAC;KAC5D,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;;EAElC;EAAC,QAAAE,CAAA,G;qBAnBUlB,yBAAyB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzBvB,yBAAyB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPtCX,EAAA,CAAAa,cAAA,cAA6D;QAAxBb,EAAA,CAAAc,UAAA,sBAAAC,4DAAA;UAAA,OAAYH,GAAA,CAAAlB,QAAA,EAAU;QAAA,EAAC;QACxDM,EAAA,CAAAa,cAAA,UAAK;QAC0Bb,EAAA,CAAAgB,MAAA,wBAAiB;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACtDjB,EAAA,CAAAkB,SAAA,eAAqF;QACvFlB,EAAA,CAAAiB,YAAA,EAAM;QAENjB,EAAA,CAAAa,cAAA,UAAK;QACwBb,EAAA,CAAAgB,MAAA,sBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAClDjB,EAAA,CAAAkB,SAAA,eAAiF;QACnFlB,EAAA,CAAAiB,YAAA,EAAM;QAENjB,EAAA,CAAAa,cAAA,UAAK;QACgBb,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACjCjB,EAAA,CAAAkB,SAAA,gBAAmE;QACrElB,EAAA,CAAAiB,YAAA,EAAM;QAENjB,EAAA,CAAAa,cAAA,WAAK;QACeb,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC/BjB,EAAA,CAAAkB,SAAA,gBAA+D;QACjElB,EAAA,CAAAiB,YAAA,EAAM;QAENjB,EAAA,CAAAa,cAAA,WAAK;QAEDb,EAAA,CAAAkB,SAAA,iBAA4D;QAC5DlB,EAAA,CAAAgB,MAAA,2CACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAGVjB,EAAA,CAAAa,cAAA,kBAA2D;QAAAb,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QA5BxEjB,EAAA,CAAAmB,UAAA,cAAAP,GAAA,CAAA5B,gBAAA,CAA8B;QA4BVgB,EAAA,CAAAoB,SAAA,IAAoC;QAApCpB,EAAA,CAAAmB,UAAA,cAAAP,GAAA,CAAA5B,gBAAA,CAAAW,KAAA,CAAoC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}