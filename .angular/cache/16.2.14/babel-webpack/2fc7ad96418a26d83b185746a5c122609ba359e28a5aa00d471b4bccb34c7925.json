{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MyService {\n  constructor(_http) {\n    this._http = _http;\n    this._url = \"http://localhost:8080/\";\n  }\n  insert(data) {\n    return this._http.post(this._url + \"insert\", data);\n  }\n  insertbookings(data) {\n    return this._http.post(this._url + \"insertbooking\", data);\n  }\n  getbookings() {\n    return this._http.get(this._url + \"getdetails\");\n  }\n  updatebooking(data) {\n    return this._http.put(this._url + \"updatedetails\", data);\n  }\n  deletebooking(data) {\n    return this._http.delete(this._url + \"deletebooking/\" + data, {\n      responseType: \"text\"\n    });\n  }\n  static #_ = this.ɵfac = function MyService_Factory(t) {\n    return new (t || MyService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MyService,\n    factory: MyService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MyService","constructor","_http","_url","insert","data","post","insertbookings","getbookings","get","updatebooking","put","deletebooking","delete","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\saik4\\Tourism\\src\\app\\services\\my.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyService {\n\n  private _url=\"http://localhost:8080/\"\n \n  constructor(private _http:HttpClient) { }\n\n  public insert(data):Observable<any>{\n    return this._http.post(this._url+\"insert\",data)\n  }\n  public insertbookings(data):Observable<any>{\n    return this._http.post(this._url+\"insertbooking\",data)\n  }\npublic getbookings():Observable<any>{\n  return this._http.get(this._url+\"getdetails\")\n}\npublic updatebooking(data){\n  return this._http.put(this._url+\"updatedetails\",data);\n}\npublic deletebooking(data){\n  return this._http.delete(this._url+\"deletebooking/\"+data,{responseType:\"text\"});\n}\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,SAAS;EAIpBC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,IAAI,GAAC,wBAAwB;EAEG;EAEjCC,MAAMA,CAACC,IAAI;IAChB,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,IAAI,CAACH,IAAI,GAAC,QAAQ,EAACE,IAAI,CAAC;EACjD;EACOE,cAAcA,CAACF,IAAI;IACxB,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,IAAI,CAACH,IAAI,GAAC,eAAe,EAACE,IAAI,CAAC;EACxD;EACKG,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACN,KAAK,CAACO,GAAG,CAAC,IAAI,CAACN,IAAI,GAAC,YAAY,CAAC;EAC/C;EACOO,aAAaA,CAACL,IAAI;IACvB,OAAO,IAAI,CAACH,KAAK,CAACS,GAAG,CAAC,IAAI,CAACR,IAAI,GAAC,eAAe,EAACE,IAAI,CAAC;EACvD;EACOO,aAAaA,CAACP,IAAI;IACvB,OAAO,IAAI,CAACH,KAAK,CAACW,MAAM,CAAC,IAAI,CAACV,IAAI,GAAC,gBAAgB,GAACE,IAAI,EAAC;MAACS,YAAY,EAAC;IAAM,CAAC,CAAC;EACjF;EAAC,QAAAC,CAAA,G;qBApBYf,SAAS,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATpB,SAAS;IAAAqB,OAAA,EAATrB,SAAS,CAAAsB,IAAA;IAAAC,UAAA,EAFR;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}